[{"path":"https://hta-pharma.github.io/chef/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Novo Nordisk /S Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hta-pharma.github.io/chef/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"MEWP (Matthew David Phelps). Author. NOSJ (Nicolai Skov Johnsen). Author. HSPU (Henrik Sparre Spiegelhauer). Author. CINO (Christian Haargaard Olsen). Author, maintainer.","code":""},{"path":"https://hta-pharma.github.io/chef/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"MEWP (Matthew David Phelps), NOSJ (Nicolai Skov Johnsen), HSPU (Henrik Sparre Spiegelhauer), CINO (Christian Haargaard Olsen) (2024). chef: Framework generating statistical evidence. R package version 0.1.1,  https://github.com/hta-pharma/chef, https://hta-pharma.github.io/chef/.","code":"@Manual{,   title = {chef: Framework for generating statistical evidence},   author = {{MEWP (Matthew David Phelps)} and {NOSJ (Nicolai Skov Johnsen)} and {HSPU (Henrik Sparre Spiegelhauer)} and {CINO (Christian Haargaard Olsen)}},   year = {2024},   note = {R package version 0.1.1,  https://github.com/hta-pharma/chef},   url = {https://hta-pharma.github.io/chef/}, }"},{"path":[]},{"path":"https://hta-pharma.github.io/chef/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Framework for generating statistical evidence","text":"provide open-source opinionated framework setting pipelines AMNOG-style HTA analyses conjunction {ramnog} package.","code":""},{"path":"https://hta-pharma.github.io/chef/index.html","id":"aim","dir":"","previous_headings":"","what":"Aim","title":"Framework for generating statistical evidence","text":"aim {chef} programmer write minimal code, programming order set-new AMNOG-type analyses. study, programmer need make, adjust, check following four types code: definition endpoint (group endpoints). set adam functions makes modifications existing ADaM datasets (e.g., new age grouping ADSL), makes new ADaM datasets none exist required output. (needed) Define set criteria endpoint included results. library criteria stored companion package {chefCriteria} specification statistical functions used summarize/analyze data. Behind scenes {chef} uses {targets} package handle pipelines. help guidance building analysis pipeline, see {ramnog} package.","code":""},{"path":"https://hta-pharma.github.io/chef/index.html","id":"developer-documentation","dir":"","previous_headings":"","what":"Developer Documentation","title":"Framework for generating statistical evidence","text":"Please refer {ramnog} general developer documentation.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_event_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Event Index to Expanded Endpoints — add_event_index","title":"Add Event Index to Expanded Endpoints — add_event_index","text":"function adds event index row expanded endpoints data.table. event index created based variable-value pairs singleton conditions define specific events interest within dataset. index can used identify events user-supplied criteria /statistical functions","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_event_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Event Index to Expanded Endpoints — add_event_index","text":"","code":"add_event_index(ep, analysis_data_container)"},{"path":"https://hta-pharma.github.io/chef/reference/add_event_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Event Index to Expanded Endpoints — add_event_index","text":"ep data.table contains expanded endpoint definitions, typically output expand_over_endpoints. assumes inclusion columns pop_var, pop_value, period_var, period_value, endpoint_filter, endpoint_group_filter, custom_pop_filter, used define conditions event indexing. analysis_data_container data.table containing analysis data.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_event_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Event Index to Expanded Endpoints — add_event_index","text":"data.table similar input additional event_index column, contains indices events determined specified conditions endpoint. indices refer INDEX_ column clinical data. INDEX_ column created chef user supplies clinical dataset.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_forced_group_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add forced group levels — add_forced_group_levels","title":"Add forced group levels — add_forced_group_levels","text":"Expand set unique group levels one grouping variables table containing combinations one grouping variables.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_forced_group_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add forced group levels — add_forced_group_levels","text":"","code":"add_forced_group_levels(combos_all, forced_group_levels)"},{"path":"https://hta-pharma.github.io/chef/reference/add_forced_group_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add forced group levels — add_forced_group_levels","text":"combos_all data.table containing combinations group levels found analysis data. forced_group_levels one column data.table containing required set group levels grouping variable.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_forced_group_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add forced group levels — add_forced_group_levels","text":"data.table containing combinations group levels exapnded forced grouping levels.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ID to user-defined endpoint groups — add_id","title":"Add ID to user-defined endpoint groups — add_id","text":"Add ID user-defined endpoint groups","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ID to user-defined endpoint groups — add_id","text":"","code":"add_id(ep)"},{"path":"https://hta-pharma.github.io/chef/reference/add_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ID to user-defined endpoint groups — add_id","text":"ep data.table containing endpoint definitions.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/add_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ID to user-defined endpoint groups — add_id","text":"data.table","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_by_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply criterion by strata — apply_criterion_by_strata","title":"Apply criterion by strata — apply_criterion_by_strata","text":"Applies by_strata_by_trt by_strata_across_trt functions endpoints data determine eligibility strata statistics. adds logical column data indicating whether row meet criteria.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_by_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply criterion by strata — apply_criterion_by_strata","text":"","code":"apply_criterion_by_strata(   ep,   analysis_data_container,   fn_map,   type = c(\"by_strata_by_trt\", \"by_strata_across_trt\") )"},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_by_strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply criterion by strata — apply_criterion_by_strata","text":"ep data.table containing endpoint data applied endpoint criteria, typically output apply_criterion_endpoint. analysis_data_container data.table containing analysis data. fn_map data.table mapping endpoint definitions -strata criteria functions. type type criterion apply, either \"by_strata_by_trt\" \"by_strata_across_trt\".","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_by_strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply criterion by strata — apply_criterion_by_strata","text":"data.table one row per stratum endpoint, additional logical column indicating whether row meets criteria.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Endpoint Criterion — apply_criterion_endpoint","title":"Apply Endpoint Criterion — apply_criterion_endpoint","text":"Applies user-supplied criteria functions endpoint determine eligibility based criteria. result logical column added data indicating whether endpoint meets criteria.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_endpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Endpoint Criterion — apply_criterion_endpoint","text":"","code":"apply_criterion_endpoint(ep, analysis_data_container, fn_map)"},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Endpoint Criterion — apply_criterion_endpoint","text":"ep data.table containing expanded endpoint definitions associated data, typically output add_event_index. analysis_data_container data.table containing analysis data. fn_map data.table mapping endpoint definitions criterion functions.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_criterion_endpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Endpoint Criterion — apply_criterion_endpoint","text":"data.table additional logical column crit_accept_endpoint indicating whether endpoint meets defined criteria.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_dt_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply filtering logic to a data.table — apply_dt_filter","title":"Apply filtering logic to a data.table — apply_dt_filter","text":"utility function applies specified filter data.table. filter can applied either subset data (type = \"filter\") create new flag column within data (type = \"flag\").","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_dt_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply filtering logic to a data.table — apply_dt_filter","text":"","code":"apply_dt_filter(adam_dt, filter_string, type = c(\"filter\", \"flag\"))"},{"path":"https://hta-pharma.github.io/chef/reference/apply_dt_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply filtering logic to a data.table — apply_dt_filter","text":"adam_dt data.table object filter applied. filter_string character string representing filtering logic, evaluated within data.table. type character string specifying type operation perform: \"filter\" subset data \"flag\" create flag column.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_dt_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply filtering logic to a data.table — apply_dt_filter","text":"data.table filtered according specified logic, added flag column.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Statistical Methods — apply_stats","title":"Apply Statistical Methods — apply_stats","text":"Applies user-supplied statistical functions prepared endpoint data. results stored data.table nested row endpoint definition object.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Statistical Methods — apply_stats","text":"","code":"apply_stats(   ep,   analysis_data_container,   type = c(\"stat_by_strata_by_trt\", \"stat_by_strata_across_trt\",     \"stat_across_strata_across_trt\") )"},{"path":"https://hta-pharma.github.io/chef/reference/apply_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Statistical Methods — apply_stats","text":"ep data.table containing prepared endpoint data statistical analysis, typically output prepare_for_stats. analysis_data_container data.table containing analysis data. functions. type type statistical function. Can one \"stat_by_strata_by_trt\", \"stat_by_strata_across_trt\", \"stat_across_strata_across_trt\"","code":""},{"path":"https://hta-pharma.github.io/chef/reference/apply_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Statistical Methods — apply_stats","text":"data.table statistical results appended.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/check_duplicate_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for duplicate function definitions — check_duplicate_functions","title":"Check for duplicate function definitions — check_duplicate_functions","text":"Check duplicate function definitions","code":""},{"path":"https://hta-pharma.github.io/chef/reference/check_duplicate_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for duplicate function definitions — check_duplicate_functions","text":"","code":"check_duplicate_functions(dir)"},{"path":"https://hta-pharma.github.io/chef/reference/check_duplicate_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for duplicate function definitions — check_duplicate_functions","text":"dir directory custom functions defined","code":""},{"path":"https://hta-pharma.github.io/chef/reference/check_duplicate_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for duplicate function definitions — check_duplicate_functions","text":"run side-effects, multiple functions encountered throws error","code":""},{"path":"https://hta-pharma.github.io/chef/reference/define_expanded_ep.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Expanded Endpoint Specifications — define_expanded_ep","title":"Define Expanded Endpoint Specifications — define_expanded_ep","text":"Takes dataset endpoint group specification, defines expanded endpoint specifications. creates metadata filter strings endpoint group, used subset data accordingly. function ensures endpoint group necessary information analysis.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/define_expanded_ep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Expanded Endpoint Specifications — define_expanded_ep","text":"","code":"define_expanded_ep(   x,   group_by,   forced_group_levels = NULL,   col_prefix = \"endpoint_group\" )"},{"path":"https://hta-pharma.github.io/chef/reference/define_expanded_ep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Expanded Endpoint Specifications — define_expanded_ep","text":"x data.table containing data associated endpoints. group_by list specifying grouping endpoints, element corresponds variable used grouping endpoints contains levels grouping variable. forced_group_levels data.table (optional). Table group levels must included expansion, regardless group_by. col_prefix prefix used create names metadata filter columns output data.table. Defaults \"endpoint_group\".","code":""},{"path":"https://hta-pharma.github.io/chef/reference/define_expanded_ep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define Expanded Endpoint Specifications — define_expanded_ep","text":"data.table additional columns metadata filter conditions endpoint group. endpoint group empty consists NA values, function returns NA.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/define_expansion_cell_from_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Expansion Cell Containing a Data Table Based on Strata — define_expansion_cell_from_data","title":"Create Expansion Cell Containing a Data Table Based on Strata — define_expansion_cell_from_data","text":"Defines expansion cell data.table row based strata. Creates data.table metadata filter conditions combination strata levels.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/define_expansion_cell_from_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Expansion Cell Containing a Data Table Based on Strata — define_expansion_cell_from_data","text":"","code":"define_expansion_cell_from_data(row, grouping_cols, data_col, col_prefix)"},{"path":"https://hta-pharma.github.io/chef/reference/define_expansion_cell_from_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Expansion Cell Containing a Data Table Based on Strata — define_expansion_cell_from_data","text":"row single row data table containing endpoint data. grouping_cols character vector specifying columns point grouping variables data. data_col name column points ADaM dataset. col_prefix prefix resulting columns, \"prefix_filter\" \"prefix_metadata\".","code":""},{"path":"https://hta-pharma.github.io/chef/reference/define_expansion_cell_from_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Expansion Cell Containing a Data Table Based on Strata — define_expansion_cell_from_data","text":"nested data.table (double listed) inserted data table cell.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/evaluate_criteria.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate criteria for inclusion of endpoints or endpoint strata — evaluate_criteria","title":"Evaluate criteria for inclusion of endpoints or endpoint strata — evaluate_criteria","text":"Evaluate criteria inclusion endpoints endpoint strata","code":""},{"path":"https://hta-pharma.github.io/chef/reference/evaluate_criteria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate criteria for inclusion of endpoints or endpoint strata — evaluate_criteria","text":"","code":"evaluate_criteria(   endpoints,   adam_set,   criteria_type = c(\"endpoint\", \"subgroup_description\", \"subgroup_analysis\") )"},{"path":"https://hta-pharma.github.io/chef/reference/evaluate_criteria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate criteria for inclusion of endpoints or endpoint strata — evaluate_criteria","text":"endpoints data table endpoint definitions. adam_set list pre-processed ADaM tables. criteria_type string specifying type criteria. can either \"endpoint\", \"subgroup_description\" \"subgroup_analysis\", apply criteria whether include endpoint, /across treatment strata final submission.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/evaluate_criteria.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate criteria for inclusion of endpoints or endpoint strata — evaluate_criteria","text":"data table endpoint definitions enriched indications whether keep endpoint/strata .","code":""},{"path":"https://hta-pharma.github.io/chef/reference/expand_ep_for_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Endpoint Data for Statistics — expand_ep_for_stats","title":"Expand Endpoint Data for Statistics — expand_ep_for_stats","text":"Expands endpoint datatable statistical analysis based specified grouping columns. Creates specifications expansion performs expansion prepare data statistical functions.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/expand_ep_for_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Endpoint Data for Statistics — expand_ep_for_stats","text":"","code":"expand_ep_for_stats(   ep,   grouping_cols,   analysis_data_container,   data_col,   id_col,   col_prefix )"},{"path":"https://hta-pharma.github.io/chef/reference/expand_ep_for_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Endpoint Data for Statistics — expand_ep_for_stats","text":"ep data.table containing endpoint data expanded. grouping_cols character vector specifying columns used grouping expansion. analysis_data_container data.table containing analysis data. data_col name column ep contains ADaM dataset. id_col name column ep contains unique identifier strata. col_prefix prefix resulting columns, defaults \"stat\".","code":""},{"path":"https://hta-pharma.github.io/chef/reference/expand_ep_for_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Endpoint Data for Statistics — expand_ep_for_stats","text":"data.table expanded endpoints prepared statistical analysis.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/expand_over_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand endpoint definitions — expand_over_endpoints","title":"Expand endpoint definitions — expand_over_endpoints","text":"function takes endpoint definitions expands based endpoint groups. row output corresponds single table figure list (TFL) definition, ensuring TFL unique definition. expansion done merging endpoint definitions mapping table links definitions user-defined functions, applied pre-processed ADaM datasets create expanded endpoints.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/expand_over_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand endpoint definitions — expand_over_endpoints","text":"","code":"expand_over_endpoints(ep, analysis_data_container)"},{"path":"https://hta-pharma.github.io/chef/reference/expand_over_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand endpoint definitions — expand_over_endpoints","text":"ep data.table containing endpoint definitions, row corresponds different endpoint contains relevant attributes endpoint name, type, criteria. analysis_data_container data.table containing analysis data.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/expand_over_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand endpoint definitions — expand_over_endpoints","text":"data.table row corresponds expanded endpoint definition","code":""},{"path":"https://hta-pharma.github.io/chef/reference/fetch_db_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch ADaM tables from a source based on endpoint specifications — fetch_db_data","title":"Fetch ADaM tables from a source based on endpoint specifications — fetch_db_data","text":"function reads set ADaM tables required produce specified endpoints input. uses user-supplied preprocessing functions specified endpoint identify process necessary ADaM tables. validates preprocessing functions applies study metadata obtain data tables. preprocessing functions result errors, function stops reports errors.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/fetch_db_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch ADaM tables from a source based on endpoint specifications — fetch_db_data","text":"","code":"fetch_db_data(study_metadata, fn_dt, env = parent.frame())"},{"path":"https://hta-pharma.github.io/chef/reference/fetch_db_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch ADaM tables from a source based on endpoint specifications — fetch_db_data","text":"study_metadata Study metadata passed mk_adam* functions. fn_dt data.table containing parsed user-supplied functions. env Advanced parameter specifying evaluation environment, defaults parent.frame().","code":""},{"path":"https://hta-pharma.github.io/chef/reference/fetch_db_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch ADaM tables from a source based on endpoint specifications — fetch_db_data","text":"list ADaM tables additional columns fn_dt including function type, hash, name, character representation call, callable .","code":""},{"path":"https://hta-pharma.github.io/chef/reference/filter_adam_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — filter_adam_db","title":"Title — filter_adam_db","text":"Title","code":""},{"path":"https://hta-pharma.github.io/chef/reference/filter_adam_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — filter_adam_db","text":"","code":"filter_adam_db(dat, pop_var, pop_value, custom_pop_filter)"},{"path":"https://hta-pharma.github.io/chef/reference/filter_adam_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — filter_adam_db","text":"dat data.table containing analysis data. pop_var Population flag variable. pop_value character containing acceptance value population flag value. custom_pop_filter character string containing custom population filter.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/filter_adam_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — filter_adam_db","text":"data.table containing filtered analysis data.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/filter_db_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter study data based on endpoint specifications — filter_db_data","title":"Filter study data based on endpoint specifications — filter_db_data","text":"function filters ADaM datasets according specifications endpoint. merges endpoint definitions mapping endpoints function hashes actual ADaM datasets. Custom filtering logic applied dataset produce output dataset.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/filter_db_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter study data based on endpoint specifications — filter_db_data","text":"","code":"filter_db_data(ep, ep_fn_map, adam_db)"},{"path":"https://hta-pharma.github.io/chef/reference/filter_db_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter study data based on endpoint specifications — filter_db_data","text":"ep data.table containing endpoint definitions. ep_fn_map data.table mapping endpoint definitions function hashes types. adam_db list ADaM tables obtained fetch_db_data.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/filter_db_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter study data based on endpoint specifications — filter_db_data","text":"data.table filtered datasets endpoint study.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/generate_function_table_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a row for the function table — generate_function_table_row","title":"Generate a row for the function table — generate_function_table_row","text":"helper function used within mk_userdef_fn_dt process unique function definition input data.table create new row parsed function information. handles null functions creating empty entries non-null functions creates character representation callable function.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/generate_function_table_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a row for the function table — generate_function_table_row","text":"","code":"generate_function_table_row(fn_type, fn, fn_name, fn_hash, env)"},{"path":"https://hta-pharma.github.io/chef/reference/generate_function_table_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a row for the function table — generate_function_table_row","text":"fn_type type function character string. fn list containing function called. fn_name name function character string. fn_hash unique hash function character string. env environment evaluate function.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/generate_function_table_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a row for the function table — generate_function_table_row","text":"data.table row function's details.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/group_ep_for_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Group endpoints for targets pipeline — group_ep_for_targets","title":"Group endpoints for targets pipeline — group_ep_for_targets","text":"Group endpoints targets pipeline","code":""},{"path":"https://hta-pharma.github.io/chef/reference/group_ep_for_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group endpoints for targets pipeline — group_ep_for_targets","text":"","code":"group_ep_for_targets(ep, n_per_group)"},{"path":"https://hta-pharma.github.io/chef/reference/group_ep_for_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group endpoints for targets pipeline — group_ep_for_targets","text":"ep data.table containing endpoint specification n_per_group Number endpoints per group.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/group_ep_for_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group endpoints for targets pipeline — group_ep_for_targets","text":"data.table containing endpoint specification grouping column.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/handle_mk_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle creation of endpoint def function — handle_mk_fn","title":"Handle creation of endpoint def function — handle_mk_fn","text":"Handle creation endpoint def function","code":""},{"path":"https://hta-pharma.github.io/chef/reference/handle_mk_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle creation of endpoint def function — handle_mk_fn","text":"","code":"handle_mk_fn(   fn,   pipeline_id,   r_functions_dir,   type = c(\"mk_endpoint_def\", \"mk_criterion\", \"mk_adam\"),   env )"},{"path":"https://hta-pharma.github.io/chef/reference/handle_mk_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle creation of endpoint def function — handle_mk_fn","text":"pipeline_id pipeline ID r_functions_dir directory custom R scripts go type Type mk_* function: mk_endpoint_def (default), mk_criterion, mk_adam. fn_list fn list format","code":""},{"path":"https://hta-pharma.github.io/chef/reference/index_expanded_ep_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Index the expanded endpoints — index_expanded_ep_groups","title":"Index the expanded endpoints — index_expanded_ep_groups","text":"Creates index endpoint groups expanding single endpoint definition include specified levels. multiple variables specified grouping, function returns possible combinations. also indexes specific combinations found supplied study data, indicating whether data exists group combination.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/index_expanded_ep_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index the expanded endpoints — index_expanded_ep_groups","text":"","code":"index_expanded_ep_groups(x, group_by, forced_group_levels = NULL)"},{"path":"https://hta-pharma.github.io/chef/reference/index_expanded_ep_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index the expanded endpoints — index_expanded_ep_groups","text":"x dataset study data (.e ADaM). group_by list specifying grouping endpoints. forced_group_levels data.table (optional). Table group levels must included expansion, regardless group_by.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/index_expanded_ep_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index the expanded endpoints — index_expanded_ep_groups","text":"data table number columns number variables included grouping specification, plus additional column empty specifies records corresponding group combination. FALSE means >=1 record exists supplied study data.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/index_non_null_group_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Index Non-Null Group Levels — index_non_null_group_level","title":"Index Non-Null Group Levels — index_non_null_group_level","text":"Takes list representing group levels returns new list non-null elements. used filter null values list group levels, can necessary defining expanded endpoint specifications.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/index_non_null_group_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index Non-Null Group Levels — index_non_null_group_level","text":"","code":"index_non_null_group_level(x)"},{"path":"https://hta-pharma.github.io/chef/reference/index_non_null_group_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index Non-Null Group Levels — index_non_null_group_level","text":"x list representing group levels endpoint grouping.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/index_non_null_group_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index Non-Null Group Levels — index_non_null_group_level","text":"list containing non-null elements input list.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/llist.html","id":null,"dir":"Reference","previous_headings":"","what":"Make list of lists — llist","title":"Make list of lists — llist","text":"Make list lists","code":""},{"path":"https://hta-pharma.github.io/chef/reference/llist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make list of lists — llist","text":"","code":"llist(...)"},{"path":"https://hta-pharma.github.io/chef/reference/llist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make list of lists — llist","text":"... Elements included nested list","code":""},{"path":"https://hta-pharma.github.io/chef/reference/llist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make list of lists — llist","text":"list object containing list element defined ...","code":""},{"path":"https://hta-pharma.github.io/chef/reference/load_debug_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Debugging Session — load_debug_session","title":"Load Debugging Session — load_debug_session","text":"Loads previously staged debugging session RDS file created chef::with_stats_validation, setting environment debug function call interactively.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/load_debug_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Debugging Session — load_debug_session","text":"","code":"load_debug_session(debug_file)"},{"path":"https://hta-pharma.github.io/chef/reference/load_debug_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Debugging Session — load_debug_session","text":"debug_file path RDS file containing debugging environment.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/load_debug_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Debugging Session — load_debug_session","text":"None; function used side effects.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/mk_endpoint_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an endpoint specification record — mk_endpoint_str","title":"Make an endpoint specification record — mk_endpoint_str","text":"Make endpoint specification record","code":""},{"path":"https://hta-pharma.github.io/chef/reference/mk_endpoint_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an endpoint specification record — mk_endpoint_str","text":"","code":"mk_endpoint_str(   study_metadata = NULL,   pop_var = NULL,   pop_value = NULL,   custom_pop_filter = NA_character_,   treatment_var = NULL,   treatment_refval = NULL,   period_var = NA_character_,   period_value = NA_character_,   endpoint_filter = NA_character_,   group_by = NA_character_,   stratify_by = NULL,   endpoint_label = NA_character_,   data_prepare = NULL,   stat_by_strata_by_trt = NULL,   stat_by_strata_across_trt = NULL,   stat_across_strata_across_trt = NULL,   crit_endpoint = NULL,   crit_by_strata_by_trt = NULL,   crit_by_strata_across_trt = NULL,   only_strata_with_events = FALSE,   env = parent.frame() )"},{"path":"https://hta-pharma.github.io/chef/reference/mk_endpoint_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an endpoint specification record — mk_endpoint_str","text":"study_metadata List. Metadata describing clinical study. pop_var Character. pop_value Character. custom_pop_filter Character. treatment_var Character. treatment_refval Character. period_var Character. period_value Character. endpoint_filter Character. group_by Character. stratify_by List. endpoint_label Character. data_prepare List. stat_by_strata_by_trt List. stat_by_strata_across_trt List. stat_across_strata_across_trt List. crit_endpoint List. crit_by_strata_by_trt List. crit_by_strata_across_trt List. only_strata_with_events Boolean. env Environment.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/mk_endpoint_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an endpoint specification record — mk_endpoint_str","text":"data.table containing endpoint specification.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/mk_userdef_fn_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse functions supplied by user — mk_userdef_fn_dt","title":"Parse functions supplied by user — mk_userdef_fn_dt","text":"function takes data.table containing user-supplied function definitions parses structured format. input data.table expected specific columns include function type, function , name function, unique hash function. output list data.table objects, data.table corresponds unique function type contains detailed information function, including character representation callable function .","code":""},{"path":"https://hta-pharma.github.io/chef/reference/mk_userdef_fn_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse functions supplied by user — mk_userdef_fn_dt","text":"","code":"mk_userdef_fn_dt(x, env = parent.frame())"},{"path":"https://hta-pharma.github.io/chef/reference/mk_userdef_fn_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse functions supplied by user — mk_userdef_fn_dt","text":"x data.table object representing endpoint definition data model, contain following columns: fn_type: Character vector specifying type function. fn: List callables (length 1) representing function called. fn_name: Character vector name function. fn_hash: Character vector unique hash function. env environment evaluate functions. default parent frame function called.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/mk_userdef_fn_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse functions supplied by user — mk_userdef_fn_dt","text":"data.table row containing parsed function definition. columns include: fn_type: Character vector type function. fn_hash: Character vector unique hash function. fn_name: Character vector name function. fn_call_char: Character vector function call string. fn_callable: List callables representing parsed function.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/parse_function_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse function inputs — parse_function_input","title":"Parse function inputs — parse_function_input","text":"function processes list representing function input. function supplied argument, argument specified form list(c(fun, arg=x)). function returns input function unchanged arguments provided wraps function arguments using purrr::partial arguments present.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/parse_function_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse function inputs — parse_function_input","text":"","code":"parse_function_input(fn_input)"},{"path":"https://hta-pharma.github.io/chef/reference/parse_function_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse function inputs — parse_function_input","text":"fn_input list representing function input, may contain function arguments.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/parse_function_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse function inputs — parse_function_input","text":"function arguments wrapped using purrr::partial arguments provided; otherwise, returns function unchanged.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/prepare_for_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare (and Expand) Endpoint for Statistical Analysis — prepare_for_stats","title":"Prepare (and Expand) Endpoint for Statistical Analysis — prepare_for_stats","text":"Prepares endpoint data ingestion user-supplied statistical function expanding based type statistics performed. expands data according specified statistical type, determines grouping columns used expansion.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/prepare_for_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare (and Expand) Endpoint for Statistical Analysis — prepare_for_stats","text":"","code":"prepare_for_stats(   ep,   analysis_data_container,   fn_map,   type = c(\"stat_by_strata_by_trt\", \"stat_by_strata_across_trt\",     \"stat_across_strata_across_trt\"),   data_col = \"dat\",   id_col = \"strata_id\" )"},{"path":"https://hta-pharma.github.io/chef/reference/prepare_for_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare (and Expand) Endpoint for Statistical Analysis — prepare_for_stats","text":"ep data.table containing expanded endpoint definitions associated data, typically output apply_criterion_by_strata. analysis_data_container data.table containing analysis data. fn_map data.table mapping endpoint definitions statistical functions. type character string specifying type statistics data prepared. Valid types \"stat_by_strata_by_trt\", \"stat_by_strata_across_trt\", \"stat_across_strata_across_trt\". data_col name column ep contains ADaM dataset. id_col name column ep contains unique identifier strata.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/prepare_for_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare (and Expand) Endpoint for Statistical Analysis — prepare_for_stats","text":"data.table expanded endpoints prepared statistical analysis.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/run_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a targets pipeline — run_pipeline","title":"Run a targets pipeline — run_pipeline","text":"wrapper targets::tar_make() ensures correct pipeline run, correct cache location used pipeline. Relies _targets.yaml file existing home directory project.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/run_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a targets pipeline — run_pipeline","text":"","code":"run_pipeline(pipeline_id = NULL, pipeline_name = NULL)"},{"path":"https://hta-pharma.github.io/chef/reference/run_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a targets pipeline — run_pipeline","text":"pipeline_id character string function pipeline ID. Must contain non-alphanumeric characters pipeline_name Usually leave blank, special cases use custom naming convention pipelines (recommended). used, leave pipeline_id blank enter custom pipeline name .","code":""},{"path":"https://hta-pharma.github.io/chef/reference/run_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a targets pipeline — run_pipeline","text":"Nothing, run side effects","code":""},{"path":"https://hta-pharma.github.io/chef/reference/stage_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage a targets pipeline so that you can work interactively with it — stage_pipeline","title":"Stage a targets pipeline so that you can work interactively with it — stage_pipeline","text":"interact targets pipeline (e.g., run pipeline, load completed targets cache memory), targets needs know pipeline want work . function thin wrapper apound Sys.setenv() call, depends _targets.yaml file set correctly (happens automatically run use_pipeline() set new pipeline","code":""},{"path":"https://hta-pharma.github.io/chef/reference/stage_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stage a targets pipeline so that you can work interactively with it — stage_pipeline","text":"","code":"stage_pipeline(pipeline_id = NULL, pipeline_name = NULL)"},{"path":"https://hta-pharma.github.io/chef/reference/stage_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stage a targets pipeline so that you can work interactively with it — stage_pipeline","text":"pipeline_id character string. Must contain non-alphanumeric characters pipeline_name Usually leave blank, special cases use custom naming convention pipelines (recommended). used, leave pipeline_id blank enter custom pipeline name .","code":""},{"path":"https://hta-pharma.github.io/chef/reference/stage_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stage a targets pipeline so that you can work interactively with it — stage_pipeline","text":"Nothing, run side effects","code":""},{"path":"https://hta-pharma.github.io/chef/reference/try_and_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Try and Validate Wrapper for Statistical Functions — try_and_validate","title":"Try and Validate Wrapper for Statistical Functions — try_and_validate","text":"Attempts execute statistical function validates output. function fails output invalid, provides meaningful error messages sets debugging environment.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/try_and_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try and Validate Wrapper for Statistical Functions — try_and_validate","text":"","code":"try_and_validate(   expr_,   expr_name = NA_character_,   debug_dir = \"debug\",   validator = function(expr_result) {      NA_character_  },   stage_debugging = TRUE )"},{"path":"https://hta-pharma.github.io/chef/reference/try_and_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try and Validate Wrapper for Statistical Functions — try_and_validate","text":"expr_ expression type call evaluated, typically call statistical function. expr_name name expression, used debugging purposes. debug_dir directory debugging information stored. validator function used validate output expression. stage_debugging flag indicating whether stage debugging information case errors.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/try_and_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try and Validate Wrapper for Statistical Functions — try_and_validate","text":"result evaluated expression successful valid.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/unnest_by_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest data model by the supplied function columns — unnest_by_fns","title":"Unnest data model by the supplied function columns — unnest_by_fns","text":"function takes data.table vector column names. columns expected contain lists function calls. function 'unnests' columns function call represented row resulting data.table. useful processing analyzing function calls separately.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/unnest_by_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest data model by the supplied function columns — unnest_by_fns","text":"","code":"unnest_by_fns(dt, cols)"},{"path":"https://hta-pharma.github.io/chef/reference/unnest_by_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest data model by the supplied function columns — unnest_by_fns","text":"dt data.table object. endpoint data model contains nested function calls. cols character vector quoted column names dt contain nested function calls.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/unnest_by_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest data model by the supplied function columns — unnest_by_fns","text":"data.table long format, row corresponds single function call nested lists specified columns.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/unnest_endpoint_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest over user-supplied functions in endpoint definitions — unnest_endpoint_functions","title":"Unnest over user-supplied functions in endpoint definitions — unnest_endpoint_functions","text":"function processes data.table containing endpoint definitions unnesting function calls specified columns. tailored endpoint definition specific data structure, endpoint definitions include user-supplied functions. unnesting, removes rows function NULL (indicating empty function) computes hash function call identification purposes.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/unnest_endpoint_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest over user-supplied functions in endpoint definitions — unnest_endpoint_functions","text":"","code":"unnest_endpoint_functions(   endpoint_defs,   fn_cols = c(\"data_prepare\", \"stat_by_strata_by_trt\", \"stat_by_strata_across_trt\",     \"stat_across_strata_across_trt\", \"crit_endpoint\", \"crit_by_strata_by_trt\",     \"crit_by_strata_across_trt\"),   env = parent.frame() )"},{"path":"https://hta-pharma.github.io/chef/reference/unnest_endpoint_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest over user-supplied functions in endpoint definitions — unnest_endpoint_functions","text":"endpoint_defs data.table containing endpoint definitions nested function calls columns defined fn_cols argument. fn_cols character vector default names columns contain function calls. columns expected endpoint_defs data.table. env environment evaluate functions. default parent frame function called.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/unnest_endpoint_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest over user-supplied functions in endpoint definitions — unnest_endpoint_functions","text":"data.table function call represented separate row, including unique hash function call.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/use_chef.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a pipeline from a template — use_chef","title":"Build a pipeline from a template — use_chef","text":"Build pipeline template","code":""},{"path":"https://hta-pharma.github.io/chef/reference/use_chef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a pipeline from a template — use_chef","text":"","code":"use_chef(   pipeline_dir = \"pipeline/\",   r_functions_dir = \"R/\",   pipeline_id,   mk_endpoint_def_fn = NULL,   mk_adam_fn = NULL,   mk_criteria_fn = NULL,   env = parent.frame() )"},{"path":"https://hta-pharma.github.io/chef/reference/use_chef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a pipeline from a template — use_chef","text":"pipeline_dir Character string ending /. directory targets pipeline scripts stored. Keep mind, wherever pipeline scripts stored, targets cache files also stored (cache files version control thus exist \"machine\"). r_functions_dir Character string ending /. directory R scripts project stored. include mk_adam_*() criterion functions example, functions used pipelines. pipeline_id Character sting. Alphanumeric mk_endpoint_def_fn like use existing mk_endpoint_def_*() function starting point pipeline, supply unquoted function name . assumes arguments function call functions available global enironment (.e type my_fun() console, find function try run ) mk_adam_fn List functions used making adam dataset. useful want supply already existing functions. must list, element must unquoted function name (e.g. my_adam_fn). functions available global enironment (.e type my_adam_fun() console, find function try run ). functions supplied, default functions written. want functions written, set mk_adam_fn = NA. mk_criteria_fn List functions used making criteria endpoint/analysis inclusion. useful want supply already existing functions part chefcriterion package. must list, element must unquoted function name (e.g. my_criteria_fn). functions available global environment (.e type my_criteria_fn() console, find function try run ). env Environment.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/use_chef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a pipeline from a template — use_chef","text":"Nothing, run side effects.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/use_chef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a pipeline from a template — use_chef","text":"Sets directory structure helper files required making chef analysis pipeline. function needs run home directory project file (.Rproj) associated analysis project. project file located different directory, manually set required files.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_crit_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Output from Criterion Functions — validate_crit_output","title":"Validate Output from Criterion Functions — validate_crit_output","text":"Validates output criterion functions ensure logical value. used confirm criterion functions returning expected results.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_crit_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Output from Criterion Functions — validate_crit_output","text":"","code":"validate_crit_output(output)"},{"path":"https://hta-pharma.github.io/chef/reference/validate_crit_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Output from Criterion Functions — validate_crit_output","text":"output output criterion function.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_crit_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Output from Criterion Functions — validate_crit_output","text":"error message validation fails, otherwise NA.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_endpoints_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate user inputs to endpoint definition — validate_endpoints_def","title":"Validate user inputs to endpoint definition — validate_endpoints_def","text":"Validate user inputs endpoint definition","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_endpoints_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate user inputs to endpoint definition — validate_endpoints_def","text":"","code":"validate_endpoints_def(endpoint_base)"},{"path":"https://hta-pharma.github.io/chef/reference/validate_endpoints_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate user inputs to endpoint definition — validate_endpoints_def","text":"endpoint_base Endpoint definition data.table","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_endpoints_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate user inputs to endpoint definition — validate_endpoints_def","text":"Run side effects. validation error stops program, otherwise function returns 'TRUE'","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_stat_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Output from Statistical Functions — validate_stat_output","title":"Validate Output from Statistical Functions — validate_stat_output","text":"Validates output statistical functions ensure conforms expected structure. expected structure includes specific column names non-empty results.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_stat_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Output from Statistical Functions — validate_stat_output","text":"","code":"validate_stat_output(output)"},{"path":"https://hta-pharma.github.io/chef/reference/validate_stat_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Output from Statistical Functions — validate_stat_output","text":"output output statistical function.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_stat_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Output from Statistical Functions — validate_stat_output","text":"error message validation fails, otherwise NA.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_usr_fn_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the user supplied functions arguments. — validate_usr_fn_args","title":"Validate the user supplied functions arguments. — validate_usr_fn_args","text":"Checks whether expected function arguments supplied. Throws meaningful error case expected supplied arguments mismatched.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_usr_fn_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the user supplied functions arguments. — validate_usr_fn_args","text":"","code":"validate_usr_fn_args(   fn,   fn_type = c(\"data_prepare\", \"stat_by_strata_by_trt\", \"stat_by_strata_across_trt\",     \"stat_across_strata_across_trt\", \"crit_endpoint\", \"crit_by_strata_by_trt\",     \"crit_by_strata_across_trt\"),   fn_name = NA_character_ )"},{"path":"https://hta-pharma.github.io/chef/reference/validate_usr_fn_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the user supplied functions arguments. — validate_usr_fn_args","text":"fn (function) non-primitive function fn_type (character) giving type user def function. fn_name (character) custom name use error msg: otherwise derive name function symbol.","code":""},{"path":"https://hta-pharma.github.io/chef/reference/validate_usr_fn_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the user supplied functions arguments. — validate_usr_fn_args","text":"NA function complies throws error.","code":""},{"path":[]},{"path":"https://hta-pharma.github.io/chef/news/index.html","id":"chef-010","dir":"Changelog","previous_headings":"","what":"chef 0.1.0","title":"chef 0.1.0","text":"Initial release.","code":""}]
